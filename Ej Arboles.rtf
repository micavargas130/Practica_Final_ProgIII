
//contar los nodos de un arbol hasta cierto nivel
template<class T>
int ArbolBinarioAVL<T>::contarHastaNivel(NodoArbolAVL<T> *r, int n) {

    if (r==nullptr) { return 0;}


    int sumIzq=contarHastaNivel(r->izq,n-1);
    int sumDer=contarHastaNivel(r->der,n-1);

    if (n>=0){ return sumIzq+sumDer+r->getDato();} //puedo poner (n<=0) si quiero que me cuente despues del nivel ingresado

    return sumIzq+sumDer;
    
    
----------------------------------------------------------------------------------
    

//contar cuantos niveles hay 
int ArbolBinarioAVL<T>::contarPorNivel(NodoArbolAVL<T> *r)
{
    if (r !=nullptr)
    {
        int izq=contarPorNivel(r->izq)+1;

        int der=contarPorNivel(r->der)+1;

        if (izq>der)
            return izq;
        else return der;

    }

    return -1;
}


---------------------------------------------------------------------------------

//Mostrar cuantos nodos hay en un nivel
int ArbolBinarioAVL<T>::contarHastaNivel(NodoArbolAVL<T> *r, int n) {

if (r==nullptr) 
{
if (n==0)
    {cout<<r->getDato<<" ";}


contarHastaNivel(r->izq,n-1);
contarHastaNivel(r->der,n-1);

}

----------------------------------------------------------------------------------

//Sumar todas las hojas de un arbol

template<class T>
int ArbolBinarioAVL<T>::SumarHojas(NodoArbolAVL<T> *r) {
    if (r ==nullptr)
    {
        return 0;
    }

    int porIzq=SumarHojas(r->izq);
    int porDer=SumarHojas(r->der);


    return porIzq+porDer+r->getDato();
}
